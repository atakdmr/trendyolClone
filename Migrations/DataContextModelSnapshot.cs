// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using trendyolClone.Models;

#nullable disable

namespace trendyolClone.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("trendyolClone.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Icon")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Sport",
                            Icon = "fa fa-running",
                            ProductCount = 0,
                            Url = "sport"
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Electronics",
                            Icon = "fa fa-mobile-alt",
                            ProductCount = 0,
                            Url = "electronics"
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Clothes",
                            Icon = "fa fa-tshirt",
                            ProductCount = 0,
                            Url = "clothes"
                        },
                        new
                        {
                            Id = 4,
                            CategoryName = "Books",
                            Icon = "fa fa-book",
                            ProductCount = 0,
                            Url = "books"
                        },
                        new
                        {
                            Id = 5,
                            CategoryName = "Toys",
                            Icon = "fa fa-dice",
                            ProductCount = 0,
                            Url = "toys"
                        },
                        new
                        {
                            Id = 6,
                            CategoryName = "Food",
                            Icon = "fa fa-utensils",
                            ProductCount = 0,
                            Url = "food"
                        },
                        new
                        {
                            Id = 7,
                            CategoryName = "Furniture",
                            Icon = "fa fa-couch",
                            ProductCount = 0,
                            Url = "furniture"
                        },
                        new
                        {
                            Id = 8,
                            CategoryName = "Beauty",
                            Icon = "fa fa-heart",
                            ProductCount = 0,
                            Url = "beauty"
                        },
                        new
                        {
                            Id = 9,
                            CategoryName = "Health",
                            Icon = "fa fa-stethoscope",
                            ProductCount = 0,
                            Url = "health"
                        },
                        new
                        {
                            Id = 10,
                            CategoryName = "Automotive",
                            Icon = "fa fa-car",
                            ProductCount = 0,
                            Url = "automotive"
                        });
                });

            modelBuilder.Entity("trendyolClone.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("FilePath")
                        .HasColumnType("TEXT");

                    b.Property<bool>("HomePage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<float>("Price")
                        .HasColumnType("REAL");

                    b.Property<bool>("Stock")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("trendyolClone.Models.Product", b =>
                {
                    b.HasOne("trendyolClone.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("trendyolClone.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
